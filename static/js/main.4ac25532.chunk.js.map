{"version":3,"sources":["components/Option.js","components/Create&SelectList.js","components/TodoInput.js","components/Header.js","components/Sort.js","components/Empty.js","components/Title.js","components/DeleteIcon.js","components/ListItem.js","components/TodoItems.js","components/SingleList.js","components/TaskHolder.js","components/ClearAll.js","components/App.js","index.js"],"names":["Option","props","id","listDetails","value","title","CreateSelectList","className","onClick","listName","prompt","timestamp","Date","getTime","setListInformation","type","name","lists","map","list","TodoInput","htmlFor","placeholder","onChange","setInputText","document","querySelectorAll","length","inputText","targetList","parseInt","getElementById","setTaskToList","querySelector","createTaskAndList","Header","Sort","compareAsc","a","b","edit","compareDesc","e","selected","target","sorted","sort","setLists","Empty","Title","DeleteIcon","element","removeList","parentElement","ListItem","todo","todoID","todoText","listID","removeTodo","TodoItems","todos","SingleList","TaskHolder","ClearAll","clearAll","App","useState","setInput","lsLists","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","concat","editTimestamp","filter","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4ac25532.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <option id={props.listDetails.id} value={props.listDetails.id}>\r\n      {props.listDetails.title}\r\n    </option>\r\n  );\r\n}\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport '../styles/Create&SelectList.css';\r\nimport Option from './Option';\r\n\r\nfunction CreateSelectList(props) {\r\n  return (\r\n    <div className=\"todo-select\">\r\n      <button\r\n        onClick={() => {\r\n          const listName = prompt('Please name your list!', 'New List');\r\n          if (listName) {\r\n            const timestamp = new Date().getTime();\r\n            props.setListInformation(timestamp, listName);\r\n          } else return;\r\n        }}\r\n        type=\"button\"\r\n        className=\"newListBtn\"\r\n      >\r\n        Create a list\r\n      </button>\r\n\r\n      <select name=\"select-list\" id=\"select-list\">\r\n        {props.lists.map(list => {\r\n          return <Option key={list.id} listDetails={list} />;\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSelectList;\r\n","import React from 'react';\r\nimport '../styles/TodoInput.css';\r\nfunction TodoInput(props) {\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <label htmlFor=\"todoInput\">Add a daily task!</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"todoInput\"\r\n        id=\"todoInput\"\r\n        placeholder=\"Write something...\"\r\n        onChange={props.setInputText}\r\n      />\r\n      <input\r\n        onClick={() => {\r\n          const timestamp = new Date().getTime();\r\n          if (document.querySelectorAll('.list').length > 0) {\r\n            if (props.inputText) {\r\n              const targetList = parseInt(\r\n                document.getElementById('select-list').value\r\n              );\r\n              props.setTaskToList(targetList, timestamp);\r\n\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          } else {\r\n            if (props.inputText) {\r\n              const listName = prompt('Please name your list!', 'New List');\r\n              props.createTaskAndList(timestamp, listName);\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          }\r\n        }}\r\n        type=\"submit\"\r\n        id=\"submitBtn\"\r\n        value=\"Add a task\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from 'react';\r\nimport CreateSelectList from './Create&SelectList';\r\nimport TodoInput from './TodoInput';\r\n\r\nimport '../styles/Header.css';\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <TodoInput\r\n        inputText={props.inputText}\r\n        setTaskToList={props.setTaskToList}\r\n        setInputText={props.setInputText}\r\n        setListInformation={props.setListInformation}\r\n        createTaskAndList={props.createTaskAndList}\r\n      />\r\n      <CreateSelectList\r\n        lists={props.lists}\r\n        setListInformation={props.setListInformation}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../styles/Sort.css';\r\nfunction Sort(props) {\r\n  function compareAsc(a, b) {\r\n    return b.edit - a.edit;\r\n  }\r\n\r\n  function compareDesc(a, b) {\r\n    return a.edit - b.edit;\r\n  }\r\n\r\n  return (\r\n    <div className=\"sort\">\r\n      <label htmlFor=\"sort\">Sort by:</label>\r\n      <select\r\n        onChange={e => {\r\n          const selected = e.target.value;\r\n          const sorted = props.lists.sort(\r\n            selected === 'Newest updates' ? compareAsc : compareDesc\r\n          );\r\n          props.setLists([...sorted]);\r\n        }}\r\n        name=\"sort\"\r\n        id=\"sort\"\r\n      >\r\n        <option value=\"Newest updates\">Newest updates</option>\r\n        <option value=\"Oldest updates\">Oldest updates</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport '../styles/Empty.css';\r\nfunction Empty() {\r\n  return (\r\n    <div className=\"empty\">\r\n      <h2>There are no lists created!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Empty;\r\n","import React from 'react';\r\nimport '../styles/Title.css';\r\nfunction Title(props) {\r\n  return <h2 className=\"title\">{props.title}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport '../styles/DeleteIcon.css';\r\nfunction DeleteIcon(props) {\r\n  return (\r\n    <i\r\n      onClick={e => {\r\n        const element = e.target;\r\n\r\n        props.removeList(parseInt(element.parentElement.id));\r\n      }}\r\n      className=\"fas fa-trash-alt deleteList\"\r\n    ></i>\r\n  );\r\n}\r\n\r\nexport default DeleteIcon;\r\n","import React from 'react';\r\n\r\nfunction ListItem(props) {\r\n  return (\r\n    <li id={props.todo.todoID} edit=\"\">\r\n      <span>{props.todo.todoText}</span>\r\n      <i\r\n        onClick={e => {\r\n          const element = e.target;\r\n          const todoID = parseInt(element.parentElement.id);\r\n          const list = element.parentElement.parentElement.parentElement;\r\n          const listID = parseInt(list.id);\r\n\r\n          props.removeTodo(listID, todoID);\r\n        }}\r\n        className=\"fas fa-trash-alt deleteItem\"\r\n      ></i>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport '../styles/TodoItems.css';\r\nimport ListItem from './ListItem';\r\n\r\nfunction TodoItems(props) {\r\n  return (\r\n    <ul>\r\n      {props.todos.map(todo => {\r\n        return (\r\n          <ListItem\r\n            removeTodo={props.removeTodo}\r\n            key={todo.todoID}\r\n            todo={todo}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from 'react';\r\nimport '../styles/SingleList.css';\r\nimport Title from './Title';\r\nimport DeleteIcon from './DeleteIcon';\r\nimport TodoItems from './TodoItems';\r\nfunction SingleList(props) {\r\n  return (\r\n    <div\r\n      className=\"list\"\r\n      id={props.listDetails.id}\r\n      edit={props.listDetails.edit}\r\n    >\r\n      <DeleteIcon removeList={props.removeList} />\r\n      <Title title={props.listDetails.title} />\r\n      <TodoItems\r\n        removeTodo={props.removeTodo}\r\n        todos={props.listDetails.todos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleList;\r\n","import React from 'react';\r\nimport '../styles/TaskHolder.css';\r\nimport Empty from './Empty';\r\nimport SingleList from './SingleList';\r\nfunction TaskHolder(props) {\r\n  if (props.lists.length === 0) {\r\n    return <Empty />;\r\n  } else\r\n    return (\r\n      <div className=\"task-holder\">\r\n        {props.lists.map(list => {\r\n          return (\r\n            <SingleList\r\n              removeTodo={props.removeTodo}\r\n              removeList={props.removeList}\r\n              key={list.id}\r\n              listDetails={list}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TaskHolder;\r\n","import React from 'react';\r\nimport '../styles/ClearAll.css';\r\nfunction ClearAll(props) {\r\n  if (props.lists.length === 0) {\r\n    return null;\r\n  } else\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            props.clearAll();\r\n          }}\r\n          className=\"clear-all-btn\"\r\n        >\r\n          Clear All\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ClearAll;\r\n","import React, { useState, useEffect } from 'react';\n\nimport Header from './Header';\nimport Sort from './Sort';\nimport '../styles/App.css';\nimport TaskHolder from './TaskHolder';\nimport ClearAll from './ClearAll';\n\nfunction App() {\n  const [inputText, setInput] = useState('');\n  const [lists, setLists] = useState(() => {\n    const lsLists = JSON.parse(localStorage.getItem('Lists'));\n    return lsLists ? lsLists : [];\n  });\n\n  function setInputTextHandler(e) {\n    const value = e.target.value;\n    setInput(value);\n  }\n\n  function setListInformationHandler(id, title) {\n    setLists(\n      lists.concat([\n        {\n          id: id,\n          edit: id,\n          title: title,\n          todos: [],\n        },\n      ])\n    );\n  }\n\n  useEffect(() => {\n    localStorage.setItem('Lists', JSON.stringify(lists));\n  });\n\n  function createTaskAndListHandler(id, title) {\n    setLists([\n      {\n        id: id,\n        edit: id,\n        title: title,\n        todos: [{ todoID: `${id + 1}`, todoText: inputText }],\n      },\n    ]);\n    setInput('');\n  }\n  function setTaskToListHandler(targetList, id) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== targetList) return list;\n\n        return {\n          ...list,\n          todos: [...list.todos, { todoID: id, todoText: inputText }],\n          edit: editTimestamp,\n        };\n      })\n    );\n    setInput('');\n  }\n\n  function removeListHandler(id) {\n    setLists(\n      lists.filter(list => {\n        return list.id !== id;\n      })\n    );\n  }\n\n  function removeTodoHandler(listID, todoID) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== listID) return list;\n        return {\n          ...list,\n          todos: list.todos.filter(todo => {\n            return parseInt(todo.todoID) !== todoID;\n          }),\n          edit: editTimestamp,\n        };\n      })\n    );\n  }\n  function clearAllHandler() {\n    setLists([]);\n  }\n  return (\n    <div className=\"App\">\n      <Header\n        inputText={inputText}\n        setListInformation={setListInformationHandler}\n        setInputText={setInputTextHandler}\n        setTaskToList={setTaskToListHandler}\n        createTaskAndList={createTaskAndListHandler}\n        lists={lists}\n      />\n      <Sort lists={lists} setLists={setLists} />\n      <TaskHolder\n        removeTodo={removeTodoHandler}\n        removeList={removeListHandler}\n        lists={lists}\n      />\n\n      <ClearAll lists={lists} clearAll={clearAllHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}