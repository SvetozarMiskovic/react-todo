{"version":3,"sources":["components/Option.js","components/Create&SelectList.js","components/TodoInput.js","components/Header.js","components/Sort.js","components/Empty.js","components/Title.js","components/DeleteIcon.js","components/ListItem.js","components/TodoItems.js","components/SingleList.js","components/TaskHolder.js","components/ClearAll.js","components/App.js","index.js"],"names":["Option","props","id","listDetails","value","title","CreateSelectList","lists","sort","compareAsc","compareDesc","className","onClick","listName","prompt","timestamp","Date","getTime","setListInformation","type","name","map","list","TodoInput","htmlFor","placeholder","onChange","setInputText","document","querySelectorAll","length","inputText","targetList","parseInt","getElementById","setTaskToList","querySelector","createTaskAndList","Header","Sort","setSort","Empty","Title","DeleteIcon","e","element","target","removeList","parentElement","ListItem","todo","todoID","edit","todoText","listID","removeTodo","TodoItems","todos","SingleList","TaskHolder","ClearAll","clearAll","App","useState","setInput","lsLists","JSON","parse","localStorage","getItem","setLists","a","b","useEffect","setItem","stringify","concat","editTimestamp","filter","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ecc352ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <option id={props.listDetails.id} value={props.listDetails.id}>\r\n      {props.listDetails.title}\r\n    </option>\r\n  );\r\n}\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport '../styles/Create&SelectList.css';\r\nimport Option from './Option';\r\n\r\nfunction CreateSelectList(props) {\r\n  props.lists.sort(props.sort === 'asc' ? props.compareAsc : props.compareDesc);\r\n  return (\r\n    <div className=\"todo-select\">\r\n      <button\r\n        onClick={() => {\r\n          const listName = prompt('Please name your list!', 'New List');\r\n          if (listName) {\r\n            const timestamp = new Date().getTime();\r\n            props.setListInformation(timestamp, listName);\r\n          } else return;\r\n        }}\r\n        type=\"button\"\r\n        className=\"newListBtn\"\r\n      >\r\n        Create a list\r\n      </button>\r\n\r\n      <select name=\"select-list\" id=\"select-list\">\r\n        {props.lists.map(list => {\r\n          return <Option key={list.id} listDetails={list} />;\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSelectList;\r\n","import React from 'react';\r\nimport '../styles/TodoInput.css';\r\nfunction TodoInput(props) {\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <label htmlFor=\"todoInput\">Add a daily task!</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"todoInput\"\r\n        id=\"todoInput\"\r\n        placeholder=\"Write something...\"\r\n        onChange={props.setInputText}\r\n      />\r\n      <input\r\n        onClick={() => {\r\n          const timestamp = new Date().getTime();\r\n          if (document.querySelectorAll('.list').length > 0) {\r\n            if (props.inputText) {\r\n              const targetList = parseInt(\r\n                document.getElementById('select-list').value\r\n              );\r\n              props.setTaskToList(targetList, timestamp);\r\n\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          } else {\r\n            if (props.inputText) {\r\n              const listName = prompt('Please name your list!', 'New List');\r\n              props.createTaskAndList(timestamp, listName);\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          }\r\n        }}\r\n        type=\"submit\"\r\n        id=\"submitBtn\"\r\n        value=\"Add a task\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from 'react';\r\nimport CreateSelectList from './Create&SelectList';\r\nimport TodoInput from './TodoInput';\r\n\r\nimport '../styles/Header.css';\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <TodoInput\r\n        inputText={props.inputText}\r\n        setTaskToList={props.setTaskToList}\r\n        setInputText={props.setInputText}\r\n        setListInformation={props.setListInformation}\r\n        createTaskAndList={props.createTaskAndList}\r\n      />\r\n      <CreateSelectList\r\n        lists={props.lists}\r\n        setListInformation={props.setListInformation}\r\n        compareAsc={props.compareAsc}\r\n        compareDesc={props.compareDesc}\r\n        sort={props.sort}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../styles/Sort.css';\r\nfunction Sort(props) {\r\n  return (\r\n    <div className=\"sort\">\r\n      <label htmlFor=\"sort\">Sort by:</label>\r\n      <select\r\n        onChange={() => {\r\n          props.sort === 'asc' ? props.setSort('desc') : props.setSort('asc');\r\n        }}\r\n        name=\"sort\"\r\n        id=\"sort\"\r\n      >\r\n        <option value=\"Newest updates\">Newest updates</option>\r\n        <option value=\"Oldest updates\">Oldest updates</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport '../styles/Empty.css';\r\nfunction Empty() {\r\n  return (\r\n    <div className=\"empty\">\r\n      <h2>There are no lists created!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Empty;\r\n","import React from 'react';\r\nimport '../styles/Title.css';\r\nfunction Title(props) {\r\n  return <h2 className=\"title\">{props.title}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport '../styles/DeleteIcon.css';\r\nfunction DeleteIcon(props) {\r\n  return (\r\n    <i\r\n      onClick={e => {\r\n        const element = e.target;\r\n\r\n        props.removeList(parseInt(element.parentElement.id));\r\n      }}\r\n      className=\"fas fa-trash-alt deleteList\"\r\n    ></i>\r\n  );\r\n}\r\n\r\nexport default DeleteIcon;\r\n","import React from 'react';\r\n\r\nfunction ListItem(props) {\r\n  return (\r\n    <li id={props.todo.todoID} edit=\"\">\r\n      <span>{props.todo.todoText}</span>\r\n      <i\r\n        onClick={e => {\r\n          const element = e.target;\r\n          const todoID = parseInt(element.parentElement.id);\r\n          const list = element.parentElement.parentElement.parentElement;\r\n          const listID = parseInt(list.id);\r\n\r\n          props.removeTodo(listID, todoID);\r\n        }}\r\n        className=\"fas fa-trash-alt deleteItem\"\r\n      ></i>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport '../styles/TodoItems.css';\r\nimport ListItem from './ListItem';\r\n\r\nfunction TodoItems(props) {\r\n  return (\r\n    <ul>\r\n      {props.todos.map(todo => {\r\n        return (\r\n          <ListItem\r\n            removeTodo={props.removeTodo}\r\n            key={todo.todoID}\r\n            todo={todo}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from 'react';\r\nimport '../styles/SingleList.css';\r\nimport Title from './Title';\r\nimport DeleteIcon from './DeleteIcon';\r\nimport TodoItems from './TodoItems';\r\nfunction SingleList(props) {\r\n  return (\r\n    <div\r\n      className=\"list\"\r\n      id={props.listDetails.id}\r\n      edit={props.listDetails.edit}\r\n    >\r\n      <DeleteIcon removeList={props.removeList} />\r\n      <Title title={props.listDetails.title} />\r\n      <TodoItems\r\n        removeTodo={props.removeTodo}\r\n        todos={props.listDetails.todos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleList;\r\n","import React from 'react';\r\nimport '../styles/TaskHolder.css';\r\nimport Empty from './Empty';\r\nimport SingleList from './SingleList';\r\n\r\nfunction TaskHolder(props) {\r\n  if (!props.lists.length) {\r\n    return <Empty />;\r\n  } else {\r\n    props.lists.sort(\r\n      props.sort === 'asc' ? props.compareAsc : props.compareDesc\r\n    );\r\n\r\n    return (\r\n      <div className=\"task-holder\">\r\n        {props.lists.map(list => {\r\n          return (\r\n            <SingleList\r\n              removeTodo={props.removeTodo}\r\n              removeList={props.removeList}\r\n              key={list.id}\r\n              listDetails={list}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskHolder;\r\n","import React from 'react';\r\nimport '../styles/ClearAll.css';\r\nfunction ClearAll(props) {\r\n  if (!props.lists.length) {\r\n    return null;\r\n  } else\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            props.clearAll();\r\n          }}\r\n          className=\"clear-all-btn\"\r\n        >\r\n          Clear All\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ClearAll;\r\n","import React, { useState, useEffect } from 'react';\n\nimport Header from './Header';\nimport Sort from './Sort';\nimport '../styles/App.css';\nimport TaskHolder from './TaskHolder';\nimport ClearAll from './ClearAll';\n\nfunction App() {\n  const [inputText, setInput] = useState('');\n  const [lists, setLists] = useState(() => {\n    const lsLists = JSON.parse(localStorage.getItem('Lists'));\n    return lsLists ? lsLists : [];\n  });\n  const [sort, setSort] = useState('asc');\n\n  function setInputTextHandler(e) {\n    const value = e.target.value;\n    setInput(value);\n  }\n\n  function setListInformationHandler(id, title) {\n    setLists(\n      lists.concat([\n        {\n          id: id,\n          edit: id,\n          title: title,\n          todos: [],\n        },\n      ])\n    );\n  }\n\n  useEffect(() => {\n    localStorage.setItem('Lists', JSON.stringify(lists));\n  });\n\n  function createTaskAndListHandler(id, title) {\n    setLists([\n      {\n        id: id,\n        edit: id,\n        title: title,\n        todos: [{ todoID: `${id + 1}`, todoText: inputText }],\n      },\n    ]);\n    setInput('');\n  }\n  function setTaskToListHandler(targetList, id) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== targetList) return list;\n\n        return {\n          ...list,\n          todos: [...list.todos, { todoID: id, todoText: inputText }],\n          edit: editTimestamp,\n        };\n      })\n    );\n    setInput('');\n  }\n\n  function removeListHandler(id) {\n    setLists(\n      lists.filter(list => {\n        return list.id !== id;\n      })\n    );\n  }\n\n  function removeTodoHandler(listID, todoID) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== listID) return list;\n        return {\n          ...list,\n          todos: list.todos.filter(todo => {\n            return parseInt(todo.todoID) !== todoID;\n          }),\n          edit: editTimestamp,\n        };\n      })\n    );\n  }\n  function clearAllHandler() {\n    setLists([]);\n  }\n\n  function compareAsc(a, b) {\n    return b.edit - a.edit;\n  }\n\n  function compareDesc(a, b) {\n    return a.edit - b.edit;\n  }\n  return (\n    <div className=\"App\">\n      <Header\n        inputText={inputText}\n        setListInformation={setListInformationHandler}\n        setInputText={setInputTextHandler}\n        setTaskToList={setTaskToListHandler}\n        createTaskAndList={createTaskAndListHandler}\n        lists={lists}\n        compareAsc={compareAsc}\n        compareDesc={compareDesc}\n        sort={sort}\n      />\n      <Sort lists={lists} setLists={setLists} sort={sort} setSort={setSort} />\n      <TaskHolder\n        removeTodo={removeTodoHandler}\n        removeList={removeListHandler}\n        lists={lists}\n        sort={sort}\n        setLists={setLists}\n        compareAsc={compareAsc}\n        compareDesc={compareDesc}\n      />\n\n      <ClearAll lists={lists} clearAll={clearAllHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}